// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using datalayer;

namespace migrations.Migrations
{
    [DbContext(typeof(MigrationDbContext))]
    partial class MigrationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ClinicDoctor", b =>
                {
                    b.Property<long>("ClinicId")
                        .HasColumnType("bigint");

                    b.Property<long>("DoctorId")
                        .HasColumnType("bigint");

                    b.HasKey("ClinicId", "DoctorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("ClinicDoctor");
                });

            modelBuilder.Entity("ClinicMedicalProfile", b =>
                {
                    b.Property<long>("ClinicId")
                        .HasColumnType("bigint");

                    b.Property<long>("MedicalProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("ClinicId", "MedicalProfileId");

                    b.HasIndex("MedicalProfileId");

                    b.ToTable("ClinicMedicalProfile");
                });

            modelBuilder.Entity("DoctorMedicalProfile", b =>
                {
                    b.Property<long>("DoctorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("MedicalProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("DoctorsId", "MedicalProfileId");

                    b.HasIndex("MedicalProfileId");

                    b.ToTable("DoctorMedicalProfile");
                });

            modelBuilder.Entity("datalayer.abstraction.Entities.Clinic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clinic");
                });

            modelBuilder.Entity("datalayer.abstraction.Entities.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("datalayer.abstraction.Entities.MedicalProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MedicalProfile");
                });

            modelBuilder.Entity("ClinicDoctor", b =>
                {
                    b.HasOne("datalayer.abstraction.Entities.Clinic", null)
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("datalayer.abstraction.Entities.Doctor", null)
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClinicMedicalProfile", b =>
                {
                    b.HasOne("datalayer.abstraction.Entities.Clinic", null)
                        .WithMany()
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("datalayer.abstraction.Entities.MedicalProfile", null)
                        .WithMany()
                        .HasForeignKey("MedicalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoctorMedicalProfile", b =>
                {
                    b.HasOne("datalayer.abstraction.Entities.Doctor", null)
                        .WithMany()
                        .HasForeignKey("DoctorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("datalayer.abstraction.Entities.MedicalProfile", null)
                        .WithMany()
                        .HasForeignKey("MedicalProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("datalayer.abstraction.Entities.Clinic", b =>
                {
                    b.OwnsOne("datalayer.abstraction.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<long>("ClinicId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<int>("Appartament")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CountryISO")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("HouseBuilding")
                                .HasColumnType("integer");

                            b1.Property<int>("HouseNnumber")
                                .HasColumnType("integer");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ClinicId");

                            b1.ToTable("Clinic");

                            b1.WithOwner()
                                .HasForeignKey("ClinicId");
                        });

                    b.OwnsOne("datalayer.abstraction.Entities.MapPoint", "MapPoint", b1 =>
                        {
                            b1.Property<long>("ClinicId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<double>("NorthLatitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("WesternLongitude")
                                .HasColumnType("double precision");

                            b1.HasKey("ClinicId");

                            b1.ToTable("Clinic");

                            b1.WithOwner()
                                .HasForeignKey("ClinicId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("MapPoint");
                });
#pragma warning restore 612, 618
        }
    }
}
